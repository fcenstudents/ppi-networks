
------
Se generó una red aleatoria según el modelo de Erdos-Rényi mediante el
archivo create-erdosrenyi-network.py. Se usó una implementación de 
aquel modelo de NetworkX con valores de parámetros n = 30 (número de nodos), p = 0.20 
(probabilidad de que un nodo se conecte al nodo i ya existente) y directed = False.
Esto dio como resultado una red de 30 nodos, no direccionada y simple. Finalmente, se guardó
la lista de adyacencia correspondiente en el archivo er-n30-p02.txt dentro de la carpeta denominada data.
------

Se generaron 30 embeddings usando deepwalk variando el número de caminos (1, 5, 10, 25, 50 y 100) y la longitud de
los mismos (5, 10, 25, 50 y 100). Se fijó el tamaño de la vantana (window-size) en 3 y la
dimensión del embedding (representation-size) en 2.

Ej. de uso de deepwalk: (por default seed = 0)

deepwalk --format adjlist --input data/er-n30-p02.txt --max-memory-data-size 0 --number-walks 1 
-- representation-size 2 --walk-length 5 --window-size 3 --workers 4 
--output deepwalk-embeddings/w3-x1-y5-er-n30-p02.txt

Los embeddings se guardaban en achivos .txt dentro de la carpeta denominada deepwalk-embeddings.

------

Se realizó un preprocesamiento de los embeddings obtenidos para una adecuada comparación entre sí.
Se llevó a cabo una normalización, ejecutando el archivo normalize-embedding.py, que consistió en
restar por la media y dividir por la desviación estándar en cada dimensión. Los nuevos embeddings
se guardaron en la carpeta embeddings-normalized.

------

A partir de los embeddings normalizados se generó el archivo fig-embeddings.pdf en la carpeta visualizations
mediante figura.py con una única figura que contiene como subplots a los embeddings. Se puede apreciar la
disposición de los nodos a medida que se varían el número de caminos y su longitud.

------

IDEA 1.

En relación a la normalización efectuada sobre los embeddings originales nos preguntamos si exite
algún efecto tras variar los valores de número y longitud de caminos. 

Usando idea-1.py, se genera el archivo idea-1-er-n30-p02.txt con # de caminos, longitud de caminos, xmean,
ymean, xstd e ystd, y tres scatterplots idea-1-mean.pdf, idea-1-std.pdf y idea-1-mean-std.pdf en
la carpeta visualizations. De esta manera, se puede observa la distribución de las medias,
desviaciones estándar y el cociente media/desviación estándar al variar los valores de los parámetros.

------

IDEA 2.

Se quiere ver relación entre los shortest path entre los nodos y la distancia euclideana de los mismos
en los embeddings.

Para ello se realizó lo siguiente:

+ Con shortest-path-nodes.py se calculó los shortest paths entre los nodos del grafo. Se
generó el archivo s-path-nodes.txt con una lista de nodei, nodej, path-lenght.

+ Con distance-embeddings.py se calculó la distancia euclideana entre los nodos en los embeddings
normalizados. Se generaron archivos dist-embedding-nodes.txt con una lista de nodei, nodej y distance
para cada combinación de parámetros.

+ Con idea-2-3.py se generó el archivo idea-2.pdf con una única figura con los scatterplots de
shortest-path vs. distance-embeddings en la carpeta visualizations.

------

IDEA 3.

Con idea-2-3.py se generó un heatmap que muestra las correlaciones entre las distancias en el grafo y en los 
embeddings según el número y longitud de los caminos. La figura se guardó en la carpeta visualizations
con el nombre idea-3.pdf.

------

Se realizaron pequeñas modificaciones: 
+ cambio del tipo de cmap en el heatmap de correlaciones y anotación del valor de correlación (idea 3).
+ se usó "alpha" (grado de transparencia) en los scatterplots de la idea 2.
+ se arregló el gráfico de medias/std en el cual los puntos caían sobre la recta y = 1.

------

IDEA 4.

Para la misma red se cambió el valor de la semilla. Se fijó window-size = 3, representation-size = 2, number-walks = 5,
walk-lenght = 10, workers = 4.

Se usó --seed = [0, 3, 10, 25, 106, 500]

Ej.

deepwalk --format adjlist --input data/er-n30-p02.txt --max-memory-data-size 0 --number-walks 5 
-- representation-size 2 --walk-length 10 --window-size 3 --workers 4 --seed 0
--output deepwalk-embeddings/w3-x5-y10-seed0-er-n30-p02.txt

Los embeddings se guardaron en la carpeta deepwalk-embeddings.

Se los normalizó restando la media y dividiendo por la desviación estándar en cada dimensión. Los embeddings
normalizados se guardaron en la carpeta embeddings-normalized.

Asimismo, con idea-4.py se generó una única figura que contiene scatterplots de los
embeddings normalizados (con walk-lenght 10 y number-walks 5) cambiando sólo el valor de seed.

------

IDEA 5. (NO CONCRETADO AÚN)

Probamos graficar la distancia euclideana (embeddings) vs. otra propiedad de la red que no sean
los shortest paths entre los nodos. Ej. betweenness centrality.

------

IDEA 6.

Se generaron 3 nuevas redes de tipo Erdos-Renyi con igual p que la anterior (0.20) pero 
distinto número de nodos. Ej. N = {100, 500, 1000}. Se guardaron las adjlists
correspondientes en la carpeta data.

---Red N = 100---

Se generaron 30 embeddings usando deepwalk variando el número de caminos (1, 5, 10, 25, 50 y 100)
y la longitud de los mismos (5, 10, 25, 50 y 100). Se fijó el tamaño de la vantana (window-size) en 3 y la
dimensión del embedding (representation-size) en 2.

Ej. de uso de deepwalk: (por default seed = 0)

deepwalk --format adjlist --input data/er-n30-p02.txt --max-memory-data-size 0 --number-walks 1 
-- representation-size 2 --walk-length 5 --window-size 3 --workers 4 
--output deepwalk-embeddings/w3-x1-y5-er-n30-p02.txt

Los embeddings se guardaban en achivos .txt dentro de la carpeta denominada deepwalk-embeddings.

Se normalizaron los embeddings obtenidos ejecutando el archivo normalize-embedding.py. Los nuevos embeddings
se guardaron en la carpeta embeddings-normalized.

A partir de los embeddings normalizados se generó el archivo idea-6-er-n30-p02.pdf en la carpeta visualizations
mediante figura.py con una única figura que contiene como subplots a los embeddings. Se puede apreciar la
disposición de los nodos a medida que se varían el número de caminos y su longitud. (Nota: no se etiquetaron a los
nodos por conveniencia, sin embargo, se hizo un gráfico similar etiquetando solo a algunos
idea-6-er-n100-p02-sample.pdf).

Se llevó a cabo la IDEA 1. (En relación a la normalización efectuada sobre los embeddings originales
nos preguntamos si exite algún efecto tras variar los valores de número y longitud de caminos). Ver en la carpeta visualizations los archivos idea-1-mean-er-n100-p02.pdf, idea-1-std-er-n100-p02.pdf y
idea-1-mean-std-er-n100-p02.pdf

------
